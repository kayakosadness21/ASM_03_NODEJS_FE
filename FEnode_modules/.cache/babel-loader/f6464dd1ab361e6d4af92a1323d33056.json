{"ast":null,"code":"export const loginAPI = user => {\n  return async dispatch => {\n    // send request to Server\n    const res = await fetch(process.env.REACT_APP_DOMAIN + \"/user/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n\n    // 420 = user is not existed\n    if (res.status === 420) {\n      dispatch({\n        type: \"NOT_EXISTED_USER\"\n      });\n      return;\n    }\n    // 421 = wrong password\n    if (res.status === 421) {\n      dispatch({\n        type: \"WRONG_PASSWORD\"\n      });\n      return;\n    }\n    // 422 = wrong password\n    if (res.status === 422) {\n      dispatch({\n        type: \"INVALID_EMAIL\"\n      });\n      return;\n    }\n    // 200 = ok\n    if (res.status === 200) {\n      const data = await res.json();\n      dispatch({\n        type: \"ON_LOGIN\",\n        payload: data\n      });\n    }\n  };\n};\nexport const signupAPI = async user => {\n  const res = await fetch(process.env.REACT_APP_DOMAIN + \"/user/signup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  });\n  const messageData = await res.json();\n  return {\n    status: res.status,\n    message: messageData.message\n  };\n};","map":{"version":3,"names":["loginAPI","user","dispatch","res","fetch","process","env","REACT_APP_DOMAIN","method","headers","body","JSON","stringify","status","type","data","json","payload","signupAPI","messageData","message"],"sources":["C:/Users/ADMIN/Documents/Project3nodejs20.1.24/frontend/FE-ecommerce/src/components/lib/api-login.js"],"sourcesContent":["export const loginAPI = (user) => {\r\n  return async (dispatch) => {\r\n    // send request to Server\r\n    const res = await fetch(process.env.REACT_APP_DOMAIN + \"/user/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    });\r\n\r\n    // 420 = user is not existed\r\n    if (res.status === 420) {\r\n      dispatch({ type: \"NOT_EXISTED_USER\" });\r\n      return;\r\n    }\r\n    // 421 = wrong password\r\n    if (res.status === 421) {\r\n      dispatch({ type: \"WRONG_PASSWORD\" });\r\n      return;\r\n    }\r\n    // 422 = wrong password\r\n    if (res.status === 422) {\r\n      dispatch({ type: \"INVALID_EMAIL\" });\r\n      return;\r\n    }\r\n    // 200 = ok\r\n    if (res.status === 200) {\r\n      const data = await res.json();\r\n      dispatch({ type: \"ON_LOGIN\", payload: data });\r\n    }\r\n  };\r\n};\r\n\r\nexport const signupAPI = async (user) => {\r\n  const res = await fetch(process.env.REACT_APP_DOMAIN + \"/user/signup\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(user),\r\n  });\r\n  const messageData = await res.json();\r\n  return {\r\n    status: res.status,\r\n    message: messageData.message,\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAIC,IAAI,IAAK;EAChC,OAAO,MAAOC,QAAQ,IAAK;IACzB;IACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,gBAAgB,GAAG,aAAa,EAAE;MACpEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,IAAI;IAC3B,CAAC,CAAC;;IAEF;IACA,IAAIE,GAAG,CAACU,MAAM,KAAK,GAAG,EAAE;MACtBX,QAAQ,CAAC;QAAEY,IAAI,EAAE;MAAmB,CAAC,CAAC;MACtC;IACF;IACA;IACA,IAAIX,GAAG,CAACU,MAAM,KAAK,GAAG,EAAE;MACtBX,QAAQ,CAAC;QAAEY,IAAI,EAAE;MAAiB,CAAC,CAAC;MACpC;IACF;IACA;IACA,IAAIX,GAAG,CAACU,MAAM,KAAK,GAAG,EAAE;MACtBX,QAAQ,CAAC;QAAEY,IAAI,EAAE;MAAgB,CAAC,CAAC;MACnC;IACF;IACA;IACA,IAAIX,GAAG,CAACU,MAAM,KAAK,GAAG,EAAE;MACtB,MAAME,IAAI,GAAG,MAAMZ,GAAG,CAACa,IAAI,EAAE;MAC7Bd,QAAQ,CAAC;QAAEY,IAAI,EAAE,UAAU;QAAEG,OAAO,EAAEF;MAAK,CAAC,CAAC;IAC/C;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,SAAS,GAAG,MAAOjB,IAAI,IAAK;EACvC,MAAME,GAAG,GAAG,MAAMC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,gBAAgB,GAAG,cAAc,EAAE;IACrEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,IAAI;EAC3B,CAAC,CAAC;EACF,MAAMkB,WAAW,GAAG,MAAMhB,GAAG,CAACa,IAAI,EAAE;EACpC,OAAO;IACLH,MAAM,EAAEV,GAAG,CAACU,MAAM;IAClBO,OAAO,EAAED,WAAW,CAACC;EACvB,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}