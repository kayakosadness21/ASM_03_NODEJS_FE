{"ast":null,"code":"const initialStateCart = {\n  total: 0,\n  listCart: [],\n  numberOfItem: 0\n};\nconst cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateCart;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    total,\n    listCart,\n    numberOfItem\n  } = state;\n  // console.log(\"CHECK listCart in cartReducer: \", listCart);\n  switch (action.type) {\n    case \"ADD_CART\":\n      // Check listCart is empty then add product to cart\n      if (listCart.length === 0) {\n        return {\n          listCart: [action.value],\n          total: +action.value.product.price * action.value.quantity,\n          numberOfItem: +action.value.quantity\n        };\n      }\n      // Check isExist\n      let isExist = listCart.findIndex(item => item.product._id === action.value.product._id);\n      const updatedProducts = listCart.map(item => {\n        let newQuantity;\n        if (item.product._id === action.value.product._id) {\n          newQuantity = +item.quantity + +action.value.quantity;\n        } else {\n          newQuantity = +item.quantity;\n        }\n        return {\n          product: item.product,\n          //{...item.product,_id:{...item.product._id}},\n          quantity: Number(newQuantity)\n        };\n      });\n      // update cartList\n      if (isExist !== -1) {\n        return {\n          listCart: [...updatedProducts],\n          total: total + +action.value.product.price * action.value.quantity,\n          numberOfItem: numberOfItem + +action.value.quantity\n        };\n      }\n      // add new item in cartList\n      if (isExist === -1) {\n        return {\n          listCart: [...listCart, action.value],\n          total: total + +action.value.product.price * action.value.quantity,\n          numberOfItem: numberOfItem + +action.value.quantity\n        };\n      }\n      break;\n    case \"DELETE_CART\":\n      const listCartAfterDelete = listCart.filter(item => item.product._id !== action.value.id);\n      return {\n        listCart: [...listCartAfterDelete],\n        total: total - +action.value.total,\n        numberOfItem: numberOfItem - +action.value.quantity\n      };\n    case \"INCREASE_QUANTITY\":\n      const incrementListCart = listCart.map(item => {\n        if (item.product._id === action.value.id) {\n          item.quantity = item.quantity + 1;\n        }\n        return item;\n      });\n      return {\n        listCart: [...incrementListCart],\n        total: total + +action.value.price,\n        numberOfItem: numberOfItem + 1\n      };\n    case \"DECREASE_QUANTITY\":\n      const decrementListCart = listCart.map(item => {\n        if (item.product._id === action.value.id) {\n          item.quantity = item.quantity - 1;\n        }\n        return item;\n      });\n      return {\n        listCart: [...decrementListCart],\n        total: total - +action.value.price,\n        numberOfItem: numberOfItem - 1\n      };\n    case \"CLEAR_CART\":\n      return {\n        listCart: [],\n        total: 0\n      };\n    default:\n      return state;\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["initialStateCart","total","listCart","numberOfItem","cartReducer","state","action","type","length","value","product","price","quantity","isExist","findIndex","item","_id","updatedProducts","map","newQuantity","Number","listCartAfterDelete","filter","id","incrementListCart","decrementListCart"],"sources":["C:/Users/ADMIN/Documents/Project3nodejs20.1.24/frontend/FE-ecommerce/src/store/cart-reducer.js"],"sourcesContent":["const initialStateCart = {\r\n  total: 0,\r\n  listCart: [],\r\n  numberOfItem: 0,\r\n};\r\n\r\nconst cartReducer = (state = initialStateCart, action) => {\r\n  const { total, listCart, numberOfItem } = state;\r\n  // console.log(\"CHECK listCart in cartReducer: \", listCart);\r\n  switch (action.type) {\r\n    case \"ADD_CART\":\r\n      // Check listCart is empty then add product to cart\r\n      if (listCart.length === 0) {\r\n        return {\r\n          listCart: [action.value],\r\n          total: +action.value.product.price * action.value.quantity,\r\n          numberOfItem: +action.value.quantity,\r\n        };\r\n      }\r\n      // Check isExist\r\n      let isExist = listCart.findIndex(\r\n        (item) => item.product._id === action.value.product._id\r\n      );\r\n      const updatedProducts = listCart.map((item) => {\r\n        let newQuantity;\r\n        if (item.product._id === action.value.product._id) {\r\n          newQuantity = +item.quantity + +action.value.quantity;\r\n        } else {\r\n          newQuantity = +item.quantity;\r\n        }\r\n        return {\r\n          product: item.product, //{...item.product,_id:{...item.product._id}},\r\n          quantity: Number(newQuantity),\r\n        };\r\n      });\r\n      // update cartList\r\n      if (isExist !== -1) {\r\n        return {\r\n          listCart: [...updatedProducts],\r\n          total: total + +action.value.product.price * action.value.quantity,\r\n          numberOfItem: numberOfItem + +action.value.quantity,\r\n        };\r\n      }\r\n      // add new item in cartList\r\n      if (isExist === -1) {\r\n        return {\r\n          listCart: [...listCart, action.value],\r\n          total: total + +action.value.product.price * action.value.quantity,\r\n          numberOfItem: numberOfItem + +action.value.quantity,\r\n        };\r\n      }\r\n      break;\r\n    case \"DELETE_CART\":\r\n      const listCartAfterDelete = listCart.filter(\r\n        (item) => item.product._id !== action.value.id\r\n      );\r\n      return {\r\n        listCart: [...listCartAfterDelete],\r\n        total: total - +action.value.total,\r\n        numberOfItem: numberOfItem - +action.value.quantity,\r\n      };\r\n    case \"INCREASE_QUANTITY\":\r\n      const incrementListCart = listCart.map((item) => {\r\n        if (item.product._id === action.value.id) {\r\n          item.quantity = item.quantity + 1;\r\n        }\r\n        return item;\r\n      });\r\n      return {\r\n        listCart: [...incrementListCart],\r\n        total: total + +action.value.price,\r\n        numberOfItem: numberOfItem + 1,\r\n      };\r\n    case \"DECREASE_QUANTITY\":\r\n      const decrementListCart = listCart.map((item) => {\r\n        if (item.product._id === action.value.id) {\r\n          item.quantity = item.quantity - 1;\r\n        }\r\n        return item;\r\n      });\r\n      return {\r\n        listCart: [...decrementListCart],\r\n        total: total - +action.value.price,\r\n        numberOfItem: numberOfItem - 1,\r\n      };\r\n    case \"CLEAR_CART\":\r\n      return {\r\n        listCart: [],\r\n        total: 0,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}